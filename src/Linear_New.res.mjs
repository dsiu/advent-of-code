// Generated by ReScript, PLEASE EDIT WITH CARE


function cmp(a, b) {
  return a - b | 0;
}

function add(a, b) {
  return a + b | 0;
}

let IntElem = {
  cmp: cmp,
  add: add
};

function cmp$1(a, b) {
  return a - b | 0;
}

function add$1(a, b) {
  return a + b;
}

let FloatElem = {
  cmp: cmp$1,
  add: add$1
};

function Make_V2(E) {
  let make = (a, b) => [
    a,
    b
  ];
  let cmp = (param, param$1) => {
    let r = E.cmp(param[0], param$1[0]);
    if (r !== 0) {
      return r;
    } else {
      return E.cmp(param[1], param$1[1]);
    }
  };
  let add = (param, param$1) => [
    E.add(param[0], param$1[0]),
    E.add(param[1], param$1[1])
  ];
  return {
    cmp: cmp,
    add: add,
    make: make
  };
}

function Make_V3(E) {
  let make = (a, b, c) => [
    a,
    b,
    c
  ];
  let cmp = (param, param$1) => {
    let r = E.cmp(param[0], param$1[0]);
    if (r !== 0) {
      return r;
    }
    let r$1 = E.cmp(param[1], param$1[1]);
    if (r$1 !== 0) {
      return r$1;
    } else {
      return E.cmp(param[2], param$1[2]);
    }
  };
  let add = (param, param$1) => [
    E.add(param[0], param$1[0]),
    E.add(param[1], param$1[1]),
    E.add(param[2], param$1[2])
  ];
  return {
    cmp: cmp,
    add: add,
    make: make
  };
}

function make(a, b) {
  return [
    a,
    b
  ];
}

function cmp$2(param, param$1) {
  let r = param[0] - param$1[0] | 0;
  if (r !== 0) {
    return r;
  } else {
    return param[1] - param$1[1] | 0;
  }
}

function add$2(param, param$1) {
  return [
    param[0] + param$1[0] | 0,
    param[1] + param$1[1] | 0
  ];
}

let V2_Int = {
  cmp: cmp$2,
  add: add$2,
  make: make
};

function make$1(a, b) {
  return [
    a,
    b
  ];
}

function cmp$3(param, param$1) {
  let r = param[0] - param$1[0] | 0;
  if (r !== 0) {
    return r;
  } else {
    return param[1] - param$1[1] | 0;
  }
}

function add$3(param, param$1) {
  return [
    param[0] + param$1[0],
    param[1] + param$1[1]
  ];
}

let V2_Float = {
  cmp: cmp$3,
  add: add$3,
  make: make$1
};

function make$2(a, b, c) {
  return [
    a,
    b,
    c
  ];
}

function cmp$4(param, param$1) {
  let r = param[0] - param$1[0] | 0;
  if (r !== 0) {
    return r;
  }
  let r$1 = param[1] - param$1[1] | 0;
  if (r$1 !== 0) {
    return r$1;
  } else {
    return param[2] - param$1[2] | 0;
  }
}

function add$4(param, param$1) {
  return [
    param[0] + param$1[0] | 0,
    param[1] + param$1[1] | 0,
    param[2] + param$1[2] | 0
  ];
}

let V3_Int = {
  cmp: cmp$4,
  add: add$4,
  make: make$2
};

export {
  IntElem,
  FloatElem,
  Make_V2,
  Make_V3,
  V2_Int,
  V2_Float,
  V3_Int,
}
/* No side effect */
