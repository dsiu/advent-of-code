// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Array from "rescript/lib/es6/Array.js";
import * as Option from "rescript/lib/es6/Option.js";
import * as Belt_Int from "rescript/lib/es6/Belt_Int.js";
import * as JS_Debug from "../../JS_Debug.res.mjs";
import * as Belt_Array from "rescript/lib/es6/Belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/Belt_Option.js";

function log(prim) {
  console.log(prim);
}

let Log = JS_Debug.make("AOC2021_Day6");

function add(prim0, prim1) {
  return prim0 + prim1;
}

function runSmart(fs, days) {
  let counts = $$Array.make(9, 0n);
  fs.forEach(n => {
    counts[n] = counts[n] + 1n;
  });
  let run = (_counts, _days) => {
    while (true) {
      let days = _days;
      let counts = _counts;
      if (days === 0) {
        return counts;
      }
      let newCount = Option.getExn(counts[0], undefined);
      let result = counts.slice(1);
      result[6] = result[6] + newCount;
      _days = days - 1 | 0;
      _counts = result.concat([newCount]);
      continue;
    };
  };
  return Belt_Array.reduce(run(counts, days), BigInt(0), (total, x) => x + total).toString();
}

let Smart = {
  add: add,
  runSmart: runSmart
};

function parse(data) {
  return data.trim().split(",").map(s => Belt_Option.getExn(Belt_Int.fromString(s)));
}

function solvePart1(data) {
  return runSmart(parse(data), 80);
}

function solvePart2(data) {
  return runSmart(parse(data), 256);
}

export {
  log,
  Log,
  Smart,
  parse,
  solvePart1,
  solvePart2,
}
/* Log Not a pure module */
