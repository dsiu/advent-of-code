// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var AOC2021_Day16$AdventOfCode = require("./AOC2021_Day16.bs.js");
var AOC2021_Day16_Data$AdventOfCode = require("./AOC2021_Day16_Data.bs.js");
var AOC2021_Day16_Data_Sample$AdventOfCode = require("./AOC2021_Day16_Data_Sample.bs.js");

describe("2021 Day16", (function () {
        test("hex string to binary", (function () {
                var result = AOC2021_Day16$AdventOfCode.Packet_M.hexStrToBinStr("D2FE28");
                expect(result).toEqual("110100101111111000101000");
                
              }));
        test("parser", (function () {
                expect("").toEqual("");
                
              }));
        test("Part 1 - Sample Data", (function () {
                var result = AOC2021_Day16$AdventOfCode.solvePart1(AOC2021_Day16_Data_Sample$AdventOfCode.data);
                expect(result).toEqual(1);
                
              }));
        test("Part 1 - Solve", (function () {
                var result = AOC2021_Day16$AdventOfCode.solvePart1(AOC2021_Day16_Data$AdventOfCode.data);
                expect(result).toEqual(1);
                
              }));
        test("Part 2 - Sample Data", (function () {
                var result = AOC2021_Day16$AdventOfCode.solvePart2(AOC2021_Day16_Data_Sample$AdventOfCode.data);
                expect(result).toEqual(2);
                
              }));
        test("Part 2 - Solve", (function () {
                var result = AOC2021_Day16$AdventOfCode.solvePart2(AOC2021_Day16_Data$AdventOfCode.data);
                expect(result).toEqual(2);
                
              }));
        
      }));

var data = AOC2021_Day16_Data$AdventOfCode.data;

var sampleData = AOC2021_Day16_Data_Sample$AdventOfCode.data;

var solvePart1 = AOC2021_Day16$AdventOfCode.solvePart1;

var solvePart2 = AOC2021_Day16$AdventOfCode.solvePart2;

var Packet;

exports.data = data;
exports.sampleData = sampleData;
exports.solvePart1 = solvePart1;
exports.solvePart2 = solvePart2;
exports.Packet = Packet;
/*  Not a pure module */
