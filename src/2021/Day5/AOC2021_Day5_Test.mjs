// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Jest from "@glennsl/rescript-jest/src/jest.mjs";
import * as AOC2021_Day5$AdventOfCode from "./AOC2021_Day5.mjs";
import * as AOC2021_Day5_Data$AdventOfCode from "./AOC2021_Day5_Data.mjs";
import * as AOC2021_Day5_Data_Sample$AdventOfCode from "./AOC2021_Day5_Data_Sample.mjs";

Jest.describe("2021 Day5", (function (param) {
        Jest.test("Part 1 - Sample Data", (function (param) {
                var result = AOC2021_Day5$AdventOfCode.solvePart1(AOC2021_Day5_Data_Sample$AdventOfCode.data);
                return Jest.Expect.toEqual(Jest.Expect.expect(result), 5);
              }));
        Jest.test("Part 1 - Solve", (function (param) {
                var result = AOC2021_Day5$AdventOfCode.solvePart1(AOC2021_Day5_Data$AdventOfCode.data);
                return Jest.Expect.toEqual(Jest.Expect.expect(result), 7085);
              }));
        var point_tests_0 = [
          AOC2021_Day5$AdventOfCode.Line.makePoints({
                x: 0,
                y: 0
              }, {
                x: 0,
                y: 2
              }),
          [
            {
              x: 0,
              y: 0
            },
            {
              x: 0,
              y: 1
            },
            {
              x: 0,
              y: 2
            }
          ]
        ];
        var point_tests_1 = {
          hd: [
            AOC2021_Day5$AdventOfCode.Line.makePoints({
                  x: 3,
                  y: 3
                }, {
                  x: 5,
                  y: 3
                }),
            [
              {
                x: 3,
                y: 3
              },
              {
                x: 4,
                y: 3
              },
              {
                x: 5,
                y: 3
              }
            ]
          ],
          tl: {
            hd: [
              AOC2021_Day5$AdventOfCode.Line.makePoints({
                    x: 9,
                    y: 7
                  }, {
                    x: 7,
                    y: 9
                  }),
              [
                {
                  x: 9,
                  y: 7
                },
                {
                  x: 8,
                  y: 8
                },
                {
                  x: 7,
                  y: 9
                }
              ]
            ],
            tl: /* [] */0
          }
        };
        var point_tests = {
          hd: point_tests_0,
          tl: point_tests_1
        };
        Jest.testAll("makePoints", point_tests, (function (param) {
                return Jest.Expect.toEqual(Jest.Expect.expect(param[0]), param[1]);
              }));
        Jest.test("Part 2 - Sample Data", (function (param) {
                var result = AOC2021_Day5$AdventOfCode.solvePart2(AOC2021_Day5_Data_Sample$AdventOfCode.data);
                return Jest.Expect.toEqual(Jest.Expect.expect(result), 12);
              }));
        Jest.test("Part 2 - Solve", (function (param) {
                var result = AOC2021_Day5$AdventOfCode.solvePart2(AOC2021_Day5_Data$AdventOfCode.data);
                return Jest.Expect.toEqual(Jest.Expect.expect(result), 20271);
              }));
      }));

var data = AOC2021_Day5_Data$AdventOfCode.data;

var sampleData = AOC2021_Day5_Data_Sample$AdventOfCode.data;

export {
  data ,
  sampleData ,
}
/*  Not a pure module */
