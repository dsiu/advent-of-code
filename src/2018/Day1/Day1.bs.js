// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("@rescript/std/lib/js/belt_Array.js");
var Belt_MapInt = require("@rescript/std/lib/js/belt_MapInt.js");
var Day1_Data$AdventOfCode = require("./Day1_Data.bs.js");

function sum(x, y) {
  return x + y | 0;
}

var part1 = Belt_Array.reduce(Day1_Data$AdventOfCode.data, 0, sum);

var init = {
  sum: 0,
  countMap: undefined,
  found: undefined
};

function reducer(r, x) {
  var countMap = r.countMap;
  var new_sum = r.sum + x | 0;
  var y = Belt_MapInt.get(countMap, new_sum);
  var countVal = y !== undefined ? y + 1 | 0 : 1;
  var match = r.found;
  var foundVal = match !== undefined ? match : (
      countVal !== 2 ? undefined : new_sum
    );
  return {
          sum: new_sum,
          countMap: Belt_MapInt.set(countMap, new_sum, countVal),
          found: foundVal
        };
}

function solve_part2(xs, _init, reducer) {
  while(true) {
    var init = _init;
    var result = Belt_Array.reduce(xs, init, reducer);
    var match = result.found;
    if (match !== undefined) {
      return result;
    }
    _init = result;
    continue ;
  };
}

function runDay1Part2(__x) {
  return solve_part2(__x, init, reducer);
}

var part2_result = solve_part2(Day1_Data$AdventOfCode.data, init, reducer);

exports.sum = sum;
exports.part1 = part1;
exports.init = init;
exports.reducer = reducer;
exports.solve_part2 = solve_part2;
exports.runDay1Part2 = runDay1Part2;
exports.part2_result = part2_result;
/* part1 Not a pure module */
