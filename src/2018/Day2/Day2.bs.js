// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var Utils$AdventOfCode = require("../Utils.bs.js");
var Day2_Data$AdventOfCode = require("./Day2_Data.bs.js");

function string_to_charStr(param) {
  return param.split("");
}

function reducer(r, x) {
  var count = Belt_MapString.get(r, x);
  if (count !== undefined) {
    return Belt_MapString.set(r, x, count + 1 | 0);
  } else {
    return Belt_MapString.set(r, x, 1);
  }
}

function char_freq(cs) {
  return Belt_Array.reduce(cs, undefined, reducer);
}

function countMatchFreq(freq, m) {
  return Belt_MapString.reduce(m, 0, (function (acc, key, v) {
                if (v === freq) {
                  return acc + 1 | 0;
                } else {
                  return acc;
                }
              }));
}

function n_char_matched_freq(freq, s) {
  var cs = s.split("");
  return countMatchFreq(freq, Belt_Array.reduce(cs, undefined, reducer));
}

function twoTimesCounter(param) {
  return n_char_matched_freq(2, param);
}

function threeTimesCounter(param) {
  return n_char_matched_freq(3, param);
}

function nonZero(x) {
  if (x !== 0) {
    return 1;
  } else {
    return 0;
  }
}

function runDay2Part1(lines) {
  var result = Belt_Array.reduce(lines, {
        twoTimes: 0,
        threeTimes: 0
      }, (function (acc, l) {
          return {
                  twoTimes: acc.twoTimes + nonZero(n_char_matched_freq(2, l)) | 0,
                  threeTimes: acc.threeTimes + nonZero(n_char_matched_freq(3, l)) | 0
                };
        }));
  return Math.imul(result.twoTimes, result.threeTimes);
}

var test_string = "aabbbccccccddddd";

var cs = test_string.split("");

Utils$AdventOfCode.map_string_dump(Belt_Array.reduce(cs, undefined, reducer));

console.log(n_char_matched_freq(3, test_string));

console.log(n_char_matched_freq(3, test_string));

console.log(runDay2Part1(Day2_Data$AdventOfCode.data.split("\n")));

console.log(runDay2Part1([
          test_string,
          test_string
        ]));

var data = Day2_Data$AdventOfCode.data;

exports.data = data;
exports.string_to_charStr = string_to_charStr;
exports.reducer = reducer;
exports.char_freq = char_freq;
exports.countMatchFreq = countMatchFreq;
exports.n_char_matched_freq = n_char_matched_freq;
exports.twoTimesCounter = twoTimesCounter;
exports.threeTimesCounter = threeTimesCounter;
exports.nonZero = nonZero;
exports.runDay2Part1 = runDay2Part1;
exports.test_string = test_string;
/*  Not a pure module */
