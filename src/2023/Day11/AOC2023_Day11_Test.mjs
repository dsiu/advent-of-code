// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Jest from "@glennsl/rescript-jest/src/jest.mjs";
import * as AOC2023_Day11$AdventOfCode from "./AOC2023_Day11.mjs";
import * as AOC2023_Day11_Data$AdventOfCode from "./AOC2023_Day11_Data.mjs";
import * as AOC2023_Day11_Data_Sample$AdventOfCode from "./AOC2023_Day11_Data_Sample.mjs";

Jest.describe("2023 Day11", () => {
  Jest.test("Part 1 - Sample Data", () => {
    let result = AOC2023_Day11$AdventOfCode.solvePart1(AOC2023_Day11_Data_Sample$AdventOfCode.data);
    let expected = BigInt(374);
    return Jest.Expect.toEqual(Jest.Expect.expect(result), expected);
  });
  Jest.test("Part 1 - Solve", () => {
    let result = AOC2023_Day11$AdventOfCode.solvePart1(AOC2023_Day11_Data$AdventOfCode.data);
    let expected = BigInt(9445168);
    return Jest.Expect.toEqual(Jest.Expect.expect(result), expected);
  });
  Jest.test("Part 2 - Sample Data", () => {
    let result = AOC2023_Day11$AdventOfCode.solvePart2(AOC2023_Day11_Data_Sample$AdventOfCode.data);
    let expected = BigInt(82000210);
    return Jest.Expect.toEqual(Jest.Expect.expect(result), expected);
  });
  Jest.test("Part 2 - Solve", () => {
    let result = AOC2023_Day11$AdventOfCode.solvePart2(AOC2023_Day11_Data$AdventOfCode.data);
    let expected = BigInt("742305960572");
    return Jest.Expect.toEqual(Jest.Expect.expect(result), expected);
  });
});

let data = AOC2023_Day11_Data$AdventOfCode.data;

let sampleData = AOC2023_Day11_Data_Sample$AdventOfCode.data;

let solvePart1 = AOC2023_Day11$AdventOfCode.solvePart1;

let solvePart2 = AOC2023_Day11$AdventOfCode.solvePart2;

export {
  data,
  sampleData,
  solvePart1,
  solvePart2,
}
/*  Not a pure module */
