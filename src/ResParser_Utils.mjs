// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Char from "rescript/lib/es6/char.js";
import * as Res_parser from "@resinfo/parser/src/res_parser.mjs";
import * as Stdlib__List from "@dsiu/rescript-stdlib-fp/src/Stdlib__List.mjs";

function charListToString(chars) {
  return Stdlib__List.reduce(Stdlib__List.map(chars, Char.escaped), "", (function (prim0, prim1) {
                return prim0.concat(prim1);
              }));
}

var anyChar = Res_parser.satisfy(function ($$char) {
      return $$char !== /* '"' */34;
    });

var string = Res_parser.map(Res_parser.many(anyChar), charListToString);

var zero = Res_parser.$$char(/* '0' */48);

var oneThroughNine = Res_parser.satisfy(function (c) {
      if (c >= /* '1' */49) {
        return /* '9' */57 >= c;
      } else {
        return false;
      }
    });

function charToString(c) {
  return String.fromCharCode(c);
}

function concatStringList(chars) {
  if (chars) {
    return chars.hd + concatStringList(chars.tl);
  } else {
    return "";
  }
}

var digit = Res_parser.map(Res_parser.orElse(zero, oneThroughNine), charToString);

var digits = Res_parser.map(Res_parser.atLeastOne(digit), concatStringList);

var whitespace = Res_parser.satisfy(function ($$char) {
      if ($$char > 13 || $$char < 9) {
        return $$char === 32;
      } else {
        return !($$char === 12 || $$char === 11);
      }
    });

var manyWhitespace = Res_parser.many(whitespace);

var A;

var L;

var S;

var P;

export {
  A ,
  L ,
  S ,
  P ,
  charListToString ,
  anyChar ,
  string ,
  zero ,
  oneThroughNine ,
  charToString ,
  concatStringList ,
  digit ,
  digits ,
  whitespace ,
  manyWhitespace ,
}
/* anyChar Not a pure module */
