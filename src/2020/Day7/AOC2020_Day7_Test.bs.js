// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.bs.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var AOC2020_Day7$AdventOfCode = require("./AOC2020_Day7.bs.js");
var AOC2020_Day7_Data$AdventOfCode = require("./AOC2020_Day7_Data.bs.js");
var AOC2020_Day7_Data_Sample$AdventOfCode = require("./AOC2020_Day7_Data_Sample.bs.js");

Jest.describe("2020 Day7", (function (param) {
        Jest.test("parseBag", (function (param) {
                var inputs = [
                  "  2 muted yellow bags",
                  "no other bags.  ",
                  "1 shiny gold bag."
                ];
                var result = Belt_Array.map(inputs, AOC2020_Day7$AdventOfCode.Rules.parseNumBag);
                var expected = [
                  AOC2020_Day7$AdventOfCode.Bag.make(2, "muted yellow"),
                  AOC2020_Day7$AdventOfCode.Bag.make(0, ""),
                  AOC2020_Day7$AdventOfCode.Bag.make(1, "shiny gold")
                ];
                return Jest.Expect.toEqual(expected, Jest.Expect.expect(result));
              }));
        Jest.test("Part 1 - Test Data", (function (param) {
                var result = AOC2020_Day7$AdventOfCode.solvePart1(AOC2020_Day7_Data_Sample$AdventOfCode.data);
                return Jest.Expect.toEqual(4, Jest.Expect.expect(result));
              }));
        Jest.test("Part 1 - Solve", (function (param) {
                var result = AOC2020_Day7$AdventOfCode.solvePart1(AOC2020_Day7_Data$AdventOfCode.data);
                return Jest.Expect.toEqual(115, Jest.Expect.expect(result));
              }));
        return Jest.test("Part 2 - Solve", (function (param) {
                      var result = AOC2020_Day7$AdventOfCode.solvePart2(AOC2020_Day7_Data$AdventOfCode.data);
                      return Jest.Expect.toEqual(1250, Jest.Expect.expect(result));
                    }));
      }));

var data = AOC2020_Day7_Data$AdventOfCode.data;

var sampleData = AOC2020_Day7_Data_Sample$AdventOfCode.data;

exports.data = data;
exports.sampleData = sampleData;
/*  Not a pure module */
