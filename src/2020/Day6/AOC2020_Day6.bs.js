// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_SetString = require("rescript/lib/js/belt_SetString.js");

function log(prim) {
  console.log(prim);
  
}

function splitChars(__x) {
  return __x.split("");
}

function splitNewline(__x) {
  return __x.split("\n");
}

function splitDoubleNewline(__x) {
  return __x.split("\n\n");
}

function sum(a, x) {
  return a + x | 0;
}

function sumIntArray(__x) {
  return Belt_Array.reduce(__x, 0, sum);
}

function join(__x) {
  return __x.join("");
}

function parsePart1(x) {
  return Belt_Array.map(x.split("\n"), (function (prim) {
                    return prim.trim();
                  })).join("").split("");
}

function countUnique(x) {
  return Belt_SetString.size(Belt_SetString.fromArray(x));
}

function parse(data, f) {
  return Belt_Array.map(data.split("\n\n"), f);
}

var filled = Belt_SetString.fromArray("abcdefghijklmnopqrstuvwxyz".split(""));

function parsePart2(x) {
  var __x = Belt_Array.map(Belt_Array.map(Belt_Array.map(x.split("\n"), (function (prim) {
                  return prim.trim();
                })), splitChars), Belt_SetString.fromArray);
  return Belt_SetString.size(Belt_Array.reduce(__x, filled, Belt_SetString.intersect));
}

function solvePart1(data) {
  return Belt_Array.reduce(Belt_Array.map(Belt_Array.map(data.split("\n\n"), parsePart1), countUnique), 0, sum);
}

function solvePart2(data) {
  return Belt_Array.reduce(Belt_Array.map(data.split("\n\n"), parsePart2), 0, sum);
}

exports.log = log;
exports.splitChars = splitChars;
exports.splitNewline = splitNewline;
exports.splitDoubleNewline = splitDoubleNewline;
exports.sum = sum;
exports.sumIntArray = sumIntArray;
exports.join = join;
exports.parsePart1 = parsePart1;
exports.countUnique = countUnique;
exports.parse = parse;
exports.filled = filled;
exports.parsePart2 = parsePart2;
exports.solvePart1 = solvePart1;
exports.solvePart2 = solvePart2;
/* filled Not a pure module */
