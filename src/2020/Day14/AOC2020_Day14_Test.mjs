// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Jest from "@glennsl/rescript-jest/src/jest.mjs";
import * as AOC2020_Day14$AdventOfCode from "./AOC2020_Day14.mjs";
import * as AOC2020_Day14_Data$AdventOfCode from "./AOC2020_Day14_Data.mjs";
import * as AOC2020_Day14_Data_Sample$AdventOfCode from "./AOC2020_Day14_Data_Sample.mjs";

Jest.describe("2020 Day14", () => {
  Jest.test("Part 1 - Sample Data", () => {
    let result = AOC2020_Day14$AdventOfCode.solvePart1(AOC2020_Day14_Data_Sample$AdventOfCode.data);
    let expected = BigInt("165");
    return Jest.Expect.toEqual(Jest.Expect.expect(result), expected);
  });
  Jest.test("Part 1 - Solve", () => {
    let result = AOC2020_Day14$AdventOfCode.solvePart1(AOC2020_Day14_Data$AdventOfCode.data);
    let expected = BigInt("17765746710228");
    return Jest.Expect.toEqual(Jest.Expect.expect(result), expected);
  });
  Jest.test("Part 2 - Mem Address Decoder 1 ", () => {
    let mask = AOC2020_Day14$AdventOfCode.Program.Mask.make("000000000000000000000000000000X1001X");
    let address = BigInt("42");
    let result = AOC2020_Day14$AdventOfCode.Program.decodeAddress(mask, address);
    let expected = [
      "26",
      "58",
      "27",
      "59"
    ];
    return Jest.Expect.toEqual(Jest.Expect.expect(result), expected);
  });
  Jest.test("Part 2 - Mem Address Decoder 2 ", () => {
    let mask = AOC2020_Day14$AdventOfCode.Program.Mask.make("00000000000000000000000000000000X0XX");
    let address = BigInt("26");
    let result = AOC2020_Day14$AdventOfCode.Program.decodeAddress(mask, address);
    let expected = [
      "16",
      "24",
      "18",
      "26",
      "17",
      "25",
      "19",
      "27"
    ];
    return Jest.Expect.toEqual(Jest.Expect.expect(result), expected);
  });
  Jest.test("Part 2 - Solve", () => {
    let result = AOC2020_Day14$AdventOfCode.solvePart2(AOC2020_Day14_Data$AdventOfCode.data);
    let expected = BigInt("4401465949086");
    return Jest.Expect.toEqual(Jest.Expect.expect(result), expected);
  });
});

let data = AOC2020_Day14_Data$AdventOfCode.data;

let sampleData = AOC2020_Day14_Data_Sample$AdventOfCode.data;

export {
  data,
  sampleData,
}
/*  Not a pure module */
