// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Utils from "../../Utils.mjs";
import * as Belt_Array from "rescript/lib/es6/Belt_Array.js";

function solvePart1(data) {
  let entries = Belt_Array.map(data.split("\n"), Utils.intFromStringExn);
  return Belt_Array.reduce(entries, [], (a, x) => {
    let candidates = Belt_Array.keep(entries, y => (y + x | 0) === 2020);
    let y = Belt_Array.get(candidates, 0);
    if (y !== undefined) {
      return Belt_Array.concat(a, [Math.imul(y, x)]);
    } else {
      return a;
    }
  });
}

function solvePart2(data) {
  let entries = Belt_Array.map(data.split("\n"), Utils.intFromStringExn);
  return Belt_Array.reduce(entries, [], (ax, x) => {
    let yy = Belt_Array.reduce(entries, [], (ay, y) => {
      let candidates = Belt_Array.keep(entries, z => ((z + y | 0) + x | 0) === 2020);
      let z = Belt_Array.get(candidates, 0);
      if (z !== undefined) {
        return Belt_Array.concat(ay, [Math.imul(Math.imul(x, y), z)]);
      } else {
        return ay;
      }
    });
    let r = Belt_Array.get(yy, 0);
    if (r !== undefined) {
      return Belt_Array.concat(ax, [r]);
    } else {
      return ax;
    }
  });
}

export {
  solvePart1,
  solvePart2,
}
/* Utils Not a pure module */
