// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Belt_MapString = require("rescript/lib/js/belt_MapString.js");
var Utils$AdventOfCode = require("../../Utils.bs.js");

function log(prim) {
  console.log(prim);
  
}

var requiredFields = [
  "byr",
  "iyr",
  "eyr",
  "hgt",
  "hcl",
  "ecl",
  "pid"
];

var optionalFields = ["cid"];

function kvStrToMap(xs) {
  return Belt_Array.reduce(xs, undefined, (function (a, s) {
                var kvs = s.split(":");
                return Belt_MapString.set(a, Belt_Option.getExn(Belt_Array.get(kvs, 0)), Belt_Option.getExn(Belt_Array.get(kvs, 1)));
              }));
}

function containsAllFields(t, fields) {
  return Belt_Array.reduce(fields, true, (function (a, f) {
                if (a) {
                  return Belt_MapString.has(t, f);
                } else {
                  return false;
                }
              }));
}

function containsAllOptionalFields(__x) {
  return containsAllFields(__x, optionalFields);
}

function containsAllRequiredFields(__x) {
  return containsAllFields(__x, requiredFields);
}

function make(s) {
  return kvStrToMap(s.split(" "));
}

var Passport = {
  requiredFields: requiredFields,
  optionalFields: optionalFields,
  kvStrToMap: kvStrToMap,
  containsAllFields: containsAllFields,
  containsAllOptionalFields: containsAllOptionalFields,
  containsAllRequiredFields: containsAllRequiredFields,
  isValid: containsAllRequiredFields,
  make: make
};

function parse(data) {
  return Belt_Array.map(data.split("\n\n"), (function (x) {
                return x.trim().replace(/(\r\n|\r|\n|\s)+/g, " ");
              }));
}

function solvePart1(data) {
  var parsed = parse(data);
  Utils$AdventOfCode.log(parsed);
  Utils$AdventOfCode.log(parsed.length);
  var p = Belt_Array.map(parsed, make);
  Utils$AdventOfCode.log(p.length);
  Belt_Array.forEach(p, Utils$AdventOfCode.dump_mapString_of_string);
  return Utils$AdventOfCode.log(Belt_Array.map(p, containsAllRequiredFields));
}

exports.log = log;
exports.Passport = Passport;
exports.parse = parse;
exports.solvePart1 = solvePart1;
/* No side effect */
