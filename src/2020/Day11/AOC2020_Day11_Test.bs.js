// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest2$AdventOfCode = require("../../../interop/Jest2.bs.js");
var Coordinate$AdventOfCode = require("../../Coordinate.bs.js");
var AOC2020_Day11$AdventOfCode = require("./AOC2020_Day11.bs.js");
var AOC2020_Day11_Data$AdventOfCode = require("./AOC2020_Day11_Data.bs.js");
var AOC2020_Day11_Data_Sample$AdventOfCode = require("./AOC2020_Day11_Data_Sample.bs.js");

describe("2020 Day11", (function () {
        var seats = AOC2020_Day11$AdventOfCode.parse(AOC2020_Day11_Data_Sample$AdventOfCode.data);
        describe("SeatMap", (function () {
                var getAdj_tests = [
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.getAdjacents(seats, [
                          0,
                          0
                        ]),
                    [
                      ".",
                      "L",
                      "L"
                    ]
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.getAdjacents(seats, [
                          1,
                          0
                        ]),
                    [
                      "L",
                      "L",
                      "L",
                      "L",
                      "L"
                    ]
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.getAdjacents(seats, [
                          2,
                          0
                        ]),
                    [
                      ".",
                      "L",
                      "L",
                      "L",
                      "L"
                    ]
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.getAdjacents(seats, [
                          9,
                          0
                        ]),
                    [
                      "L",
                      "L",
                      "L"
                    ]
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.getAdjacents(seats, [
                          2,
                          1
                        ]),
                    [
                      ".",
                      "L",
                      "L",
                      "L",
                      "L",
                      ".",
                      "L",
                      "."
                    ]
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.getAdjacents(seats, [
                          0,
                          9
                        ]),
                    [
                      "L",
                      ".",
                      "."
                    ]
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.getAdjacents(seats, [
                          8,
                          9
                        ]),
                    [
                      "L",
                      ".",
                      "L",
                      ".",
                      "L"
                    ]
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.getAdjacents(seats, [
                          9,
                          9
                        ]),
                    [
                      ".",
                      "L",
                      "L"
                    ]
                  ]
                ];
                return Jest2$AdventOfCode.testEach2("getAdjacents", getAdj_tests, (function (result, expected) {
                              expect(result).toEqual(expected);
                              
                            }));
              }));
        describe("next seat given a direction", (function () {
                var map = AOC2020_Day11$AdventOfCode.parse(".......#.\n                 ...#.....\n                 .#.......\n                 .........\n                 ..#L....#\n                 ....#....\n                 .........\n                 #........\n                 ...#.....");
                var init_1 = [
                  3,
                  4
                ];
                var nextSeat_test1 = [
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_1, Coordinate$AdventOfCode.stepN),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_1, Coordinate$AdventOfCode.stepE),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_1, Coordinate$AdventOfCode.stepS),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_1, Coordinate$AdventOfCode.stepW),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_1, Coordinate$AdventOfCode.stepNE),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_1, Coordinate$AdventOfCode.stepNW),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_1, Coordinate$AdventOfCode.stepSE),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_1, Coordinate$AdventOfCode.stepSW),
                    "#"
                  ]
                ];
                Jest2$AdventOfCode.testEach2("test 1", nextSeat_test1, (function (result, expected) {
                        expect(result).toEqual(expected);
                        
                      }));
                var init_2 = [
                  3,
                  5
                ];
                var nextSeat_test2 = [
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_2, Coordinate$AdventOfCode.stepN),
                    "L"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_2, Coordinate$AdventOfCode.stepE),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_2, Coordinate$AdventOfCode.stepS),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_2, Coordinate$AdventOfCode.stepW),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_2, Coordinate$AdventOfCode.stepNE),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_2, Coordinate$AdventOfCode.stepNW),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_2, Coordinate$AdventOfCode.stepSE),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_2, Coordinate$AdventOfCode.stepSW),
                    "."
                  ]
                ];
                Jest2$AdventOfCode.testEach2("test 2", nextSeat_test2, (function (result, expected) {
                        expect(result).toEqual(expected);
                        
                      }));
                var init_3 = [
                  0,
                  0
                ];
                var nextSeat_test3 = [
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_3, Coordinate$AdventOfCode.stepN),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_3, Coordinate$AdventOfCode.stepE),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_3, Coordinate$AdventOfCode.stepS),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_3, Coordinate$AdventOfCode.stepW),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_3, Coordinate$AdventOfCode.stepNE),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_3, Coordinate$AdventOfCode.stepNW),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_3, Coordinate$AdventOfCode.stepSE),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_3, Coordinate$AdventOfCode.stepSW),
                    "."
                  ]
                ];
                Jest2$AdventOfCode.testEach2("test 3", nextSeat_test3, (function (result, expected) {
                        expect(result).toEqual(expected);
                        
                      }));
                var init_4 = [
                  4,
                  4
                ];
                var nextSeat_test4 = [
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_4, Coordinate$AdventOfCode.stepN),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_4, Coordinate$AdventOfCode.stepE),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_4, Coordinate$AdventOfCode.stepS),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_4, Coordinate$AdventOfCode.stepW),
                    "L"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_4, Coordinate$AdventOfCode.stepNE),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_4, Coordinate$AdventOfCode.stepNW),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_4, Coordinate$AdventOfCode.stepSE),
                    "."
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map, init_4, Coordinate$AdventOfCode.stepSW),
                    "."
                  ]
                ];
                Jest2$AdventOfCode.testEach2("test 4", nextSeat_test4, (function (result, expected) {
                        expect(result).toEqual(expected);
                        
                      }));
                var map_2 = AOC2020_Day11$AdventOfCode.parse(".............\n                  .L.L.#.#.#.#.\n                  .............");
                var nextSeat_test5 = [
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map_2, [
                          1,
                          1
                        ], Coordinate$AdventOfCode.stepE),
                    "L"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map_2, [
                          3,
                          1
                        ], Coordinate$AdventOfCode.stepE),
                    "#"
                  ],
                  [
                    AOC2020_Day11$AdventOfCode.SeatMap.nextSeatIn(map_2, [
                          3,
                          1
                        ], Coordinate$AdventOfCode.stepW),
                    "L"
                  ]
                ];
                return Jest2$AdventOfCode.testEach2("test 5", nextSeat_test5, (function (result, expected) {
                              expect(result).toEqual(expected);
                              
                            }));
              }));
        test("Part 1 - Sample Data", (function () {
                var result = AOC2020_Day11$AdventOfCode.solvePart1(AOC2020_Day11_Data_Sample$AdventOfCode.data);
                expect(result).toEqual(37);
                
              }));
        test("Part 1 - Solve", (function () {
                var result = AOC2020_Day11$AdventOfCode.solvePart1(AOC2020_Day11_Data$AdventOfCode.data);
                expect(result).toEqual(2270);
                
              }));
        test("Part 2 - Solve", (function () {
                var result = AOC2020_Day11$AdventOfCode.solvePart2(AOC2020_Day11_Data$AdventOfCode.data);
                expect(result).toEqual(2042);
                
              }));
        
      }));

var data = AOC2020_Day11_Data$AdventOfCode.data;

var sampleData = AOC2020_Day11_Data_Sample$AdventOfCode.data;

exports.data = data;
exports.sampleData = sampleData;
/*  Not a pure module */
