// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Stdlib__Array from "@dsiu/rescript-stdlib-fp/src/Stdlib__Array.mjs";
import * as Utils$AdventOfCode from "../../Utils.mjs";

function log(prim) {
  console.log(prim);
}

let parse = Utils$AdventOfCode.splitChars;

function allDifferent(cs) {
  return Stdlib__Array.equal(Stdlib__Array.uniq(cs), cs, (prim0, prim1) => prim0 === prim1);
}

function hasSame(x) {
  return !allDifferent(x);
}

function interestingPosition(n, text) {
  let len = text.length;
  let candidates = Stdlib__Array.zip(Stdlib__Array.makeBy(len, prim => prim), Stdlib__Array.tails(text).map(__x => Stdlib__Array.take(__x, n)));
  let packetPos = Stdlib__Array.headUnsafe(Stdlib__Array.dropWhile(candidates, Utils$AdventOfCode.compose(prim => prim[1], hasSame)));
  return n + packetPos[0] | 0;
}

function solvePart1(data) {
  return interestingPosition(4, Utils$AdventOfCode.splitChars(data));
}

function solvePart2(data) {
  return interestingPosition(14, Utils$AdventOfCode.splitChars(data));
}

let A;

export {
  log,
  A,
  parse,
  allDifferent,
  hasSame,
  interestingPosition,
  solvePart1,
  solvePart2,
}
/* Stdlib__Array Not a pure module */
