// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Stdlib__List from "@dsiu/rescript-stdlib-fp/src/Stdlib__List.mjs";
import * as Stdlib__Array from "@dsiu/rescript-stdlib-fp/src/Stdlib__Array.mjs";

function powersetListMap_(set) {
  if (!set) {
    return {
      hd: /* [] */0,
      tl: /* [] */0
    };
  }
  let x = set.hd;
  let tail_powersets = powersetListMap_(set.tl);
  let with_x = Stdlib__List.map(tail_powersets, it => ({
    hd: x,
    tl: it
  }));
  return Stdlib__List.concat(tail_powersets, with_x);
}

function powersetListFlatMap_(set) {
  if (!set) {
    return {
      hd: /* [] */0,
      tl: /* [] */0
    };
  }
  let x = set.hd;
  let tail_powersets = powersetListFlatMap_(set.tl);
  return Stdlib__List.flatMap(tail_powersets, it => ({
    hd: it,
    tl: {
      hd: Stdlib__List.concat({
        hd: x,
        tl: /* [] */0
      }, it),
      tl: /* [] */0
    }
  }));
}

function powersetArrayWithList_(xs) {
  return Stdlib__List.toArray(Stdlib__List.map(powersetListMap_(Stdlib__List.fromArray(xs)), Stdlib__List.toArray));
}

function powersetArrayMap_(set) {
  let match = set.length;
  if (match === 0) {
    return [[]];
  }
  let x = Stdlib__Array.getUnsafe(set, 0);
  let xs = set.slice(1);
  let tail_powersets = powersetArrayMap_(xs);
  let with_x = tail_powersets.map(it => [x].concat(it));
  return tail_powersets.concat(with_x);
}

function flatMap(prim0, prim1) {
  return prim0.flatMap(prim1);
}

function powersetArrayFlatMap_(set) {
  let match = set.length;
  if (match === 0) {
    return [[]];
  }
  let x = Stdlib__Array.getUnsafe(set, 0);
  let xs = set.slice(1);
  let tail_powersets = powersetArrayFlatMap_(xs);
  return tail_powersets.flatMap(it => [
    it,
    [x].concat(it)
  ]);
}

let List;

let powersetList = powersetListFlatMap_;

let $$Array;

let powersetArray = powersetArrayFlatMap_;

export {
  List,
  powersetListMap_,
  powersetListFlatMap_,
  powersetList,
  powersetArrayWithList_,
  $$Array,
  powersetArrayMap_,
  flatMap,
  powersetArrayFlatMap_,
  powersetArray,
}
/* Stdlib__List Not a pure module */
