// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Utils$AdventOfCode = require("./2018/Utils.bs.js");

function handle(n, divisor, label) {
  var match = Caml_int32.mod_(n, divisor);
  if (match !== 0) {
    return {
            TAG: /* Unhandled */0,
            _0: n
          };
  } else {
    return {
            TAG: /* Handled */1,
            _0: label
          };
  }
}

function ifUnhandledDo(result, f) {
  if (result.TAG === /* Unhandled */0) {
    return Curry._1(f, result._0);
  } else {
    return {
            TAG: /* Handled */1,
            _0: result._0
          };
  }
}

function lastStep(x) {
  if (x.TAG === /* Unhandled */0) {
    return Utils$AdventOfCode.log(String(x._0));
  } else {
    return Utils$AdventOfCode.log(x._0);
  }
}

function fizbuzz(n) {
  return lastStep(ifUnhandledDo(ifUnhandledDo(handle(n, 15, "FizzBuzz"), (function (param) {
                        return handle(param, 3, "Fizz");
                      })), (function (param) {
                    return handle(param, 5, "Buzz");
                  })));
}

fizbuzz(12);

fizbuzz(10);

fizbuzz(15);

fizbuzz(1);

exports.handle = handle;
exports.ifUnhandledDo = ifUnhandledDo;
exports.lastStep = lastStep;
exports.fizbuzz = fizbuzz;
/*  Not a pure module */
