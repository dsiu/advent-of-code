// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Day2$AdventOfCode = require("../../../src/2018/Day2/Day2.bs.js");
var Day2_Data$AdventOfCode = require("../../../src/2018/Day2/Day2_Data.bs.js");

Jest.describe("2018 Day2", (function (param) {
        var lines = Day2_Data$AdventOfCode.data.split("\n");
        var len = lines.length;
        Jest.test("number of lines", (function (param) {
                return Jest.Expect.toEqual(250, Jest.Expect.expect(len));
              }));
        Jest.test("first line", (function (param) {
                return Jest.Expect.toEqual("crruafyzloguvxwctqmphenbkd", Jest.Expect.expect(Caml_array.caml_array_get(lines, 0)));
              }));
        Jest.test("last line", (function (param) {
                return Jest.Expect.toEqual("hrijafyzloguvxectqmpheybkd", Jest.Expect.expect(Caml_array.caml_array_get(lines, len - 1 | 0)));
              }));
        Jest.test("string to char[]", (function (param) {
                return Jest.Expect.toEqual([
                            "a",
                            "b",
                            "c"
                          ], Jest.Expect.expect(Day2$AdventOfCode.string_to_charStr("abc")));
              }));
        Jest.test("diff by 1 char strs", (function (param) {
                return Jest.Expect.toBe(true, Jest.Expect.expect(Day2$AdventOfCode.isDiffBy1(Day2$AdventOfCode.diffOfTwoCharStr("abcdef", "abcdeg"))));
              }));
        Jest.test("diff by 5 char strs", (function (param) {
                return Jest.Expect.toBe(true, Jest.Expect.expect(Day2$AdventOfCode.isDiffBy5(Day2$AdventOfCode.diffOfTwoCharStr("zzzzzz", "zabcde"))));
              }));
        return Jest.test("run part2 test", (function (param) {
                      return Jest.Expect.toBe([], Jest.Expect.expect(Day2$AdventOfCode.runDay2Part2([
                                          "abcdef",
                                          "abcdee"
                                        ])));
                    }));
      }));

/*  Not a pure module */
