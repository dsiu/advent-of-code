// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_SortArray = require("rescript/lib/js/belt_SortArray.js");
var Belt_SortArrayInt = require("rescript/lib/js/belt_SortArrayInt.js");
var Jest2$AdventOfCode = require("../interop/Jest2.bs.js");
var Belt_SortArrayString = require("rescript/lib/js/belt_SortArrayString.js");
var Powerset$AdventOfCode = require("../src/Powerset.bs.js");

function intCmp(a, b) {
  return b - a | 0;
}

function sortResultInt(xs) {
  return Belt_SortArray.stableSortBy(Belt_Array.map(xs, Belt_SortArrayInt.stableSort), (function (a, b) {
                return Belt_Array.cmp(a, b, intCmp);
              }));
}

function strCmp(a, b) {
  return a.localeCompare(b) | 0;
}

function sortResultString(xs) {
  return Belt_SortArray.stableSortBy(Belt_Array.map(xs, Belt_SortArrayString.stableSort), (function (a, b) {
                return Belt_Array.cmp(a, b, strCmp);
              }));
}

describe("Powerset", (function () {
        var int_array_1 = [
          1,
          2,
          3
        ];
        var int_array_1_result = sortResultInt([
              [],
              [3],
              [2],
              [
                2,
                3
              ],
              [1],
              [
                1,
                3
              ],
              [
                1,
                2
              ],
              [
                1,
                2,
                3
              ]
            ]);
        var string_array_1 = [
          "a",
          "b",
          "c"
        ];
        var string_array_1_result = sortResultString([
              [],
              ["c"],
              ["b"],
              [
                "b",
                "c"
              ],
              ["a"],
              [
                "a",
                "c"
              ],
              [
                "a",
                "b"
              ],
              [
                "a",
                "b",
                "c"
              ]
            ]);
        describe("powerset_array_with_list()", (function () {
                var int_tests = [[
                    Powerset$AdventOfCode.powersetArrayWithList_(int_array_1),
                    int_array_1_result
                  ]];
                var string_tests = [[
                    Powerset$AdventOfCode.powersetArrayWithList_(string_array_1),
                    string_array_1_result
                  ]];
                Jest2$AdventOfCode.testEach2("int", int_tests, (function (result, expected) {
                        expect(sortResultInt(result)).toEqual(expected);
                        
                      }));
                return Jest2$AdventOfCode.testEach2("string", string_tests, (function (result, expected) {
                              expect(sortResultString(result)).toEqual(expected);
                              
                            }));
              }));
        describe("powerset_array()", (function () {
                var int_tests = [[
                    Powerset$AdventOfCode.powersetArray(int_array_1),
                    int_array_1_result
                  ]];
                var string_tests = [[
                    Powerset$AdventOfCode.powersetArray(string_array_1),
                    string_array_1_result
                  ]];
                Jest2$AdventOfCode.testEach2("int", int_tests, (function (result, expected) {
                        expect(sortResultInt(result)).toEqual(expected);
                        
                      }));
                return Jest2$AdventOfCode.testEach2("string", string_tests, (function (result, expected) {
                              expect(sortResultString(result)).toEqual(expected);
                              
                            }));
              }));
        
      }));

var $$Array;

exports.$$Array = $$Array;
exports.intCmp = intCmp;
exports.sortResultInt = sortResultInt;
exports.strCmp = strCmp;
exports.sortResultString = sortResultString;
/*  Not a pure module */
